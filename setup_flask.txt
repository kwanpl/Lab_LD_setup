conda create --name flask-env python=3.11
conda activate flask-env

pip install flask
pip3 install --upgrade python-samsung-mdc



conda deactivate

mkdir LD-Lab-Remote_On_Off_App
cd LD-Lab-Remote_On_Off_App
mkdir templates

python app.py

-- another one
pip3 install --upgrade python-samsung-mdc


 http://127.0.0.1:5000.
----------------
https://github.com/psmsmets/samsung_mdc
pip install samsung_mdc
usage: samsung_mdc [-h] [-p ..] [-i ..] [-t ..] [-v]
                   host command [value [value ...]]

Samsung Multiple Display Control Protocol via TCP/IP

positional arguments:
  host                 Remote TV ipv4-address
  command              Control command name. Allowed values are: power,
                       volume, mute, source, screen_size, video_wall_mode,
                       safety_lock, video_wall_on, video_wall_user
  value                Data argument(s) for the `set control command`
                       (controlling). If empty (default), the `get control
                       command` answer (viewing control state) is printed to
                       stdout.

optional arguments:
  -h, --help           show this help message and exit
  -p .., --port ..     Remote TV port (default: 1515)
  -i .., --id ..       Remote TV id (default: 0xfe)
  -t .., --timeout ..  Set a timeout on blocking socket operations, in seconds
                       (default: 5.0). Timeout > 0: raise timeout exception.
                       Timeout == 0: non-blocking mode. Timeout < 0: blocking
                       mode.
  -v, --version        Print samsung_mdc version and exit

-- the python script example

from samsung_mdc import MultipleDisplayControl

# Replace with the IP address of your Samsung display
ip_address = "192.168.1.11"

with MultipleDisplayControl(ip_address) as mdc:
    # Get the power status
    power_status = mdc.get_power()
    print("Power status:", power_status)

    # Turn the display on
    mdc.set_power(True)

    # Set the source to HDMI 1
    #mdc.set_source("hdmi1")
    
    # may be? for display port
    mdc.set_source("dp")
    # Adjust the volume (0-100)
    #mdc.set_volume(50)

 OR

from samsung_mdc import MultipleDisplayControl
ip_address = "192.168.1.11"
mdc = MultipleDisplayControl(ip_address)
with mdc as mdc:
	mdc.power = True  # Turn on
	mdc.source = "hdmi2"  # Switch to HDMI 2
	# may be? for display port
    mdc.source = "dp"

